
package lasku;

/**
 *
 * @author jaska
 */
public class lasku extends javax.swing.JFrame {

   int firstnum;
   int secondnum;
   int result;
   int chk; // used to cheek reset if user is 2 lazy do it by pressing "c" button
   int beta;
   String operations;
    public lasku() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        txtDisplay = new javax.swing.JTextField();
        nappi1 = new javax.swing.JButton();
        nappi2 = new javax.swing.JButton();
        nappi3 = new javax.swing.JButton();
        nappi4 = new javax.swing.JButton();
        nappi5 = new javax.swing.JButton();
        nappi6 = new javax.swing.JButton();
        nappi7 = new javax.swing.JButton();
        nappi8 = new javax.swing.JButton();
        nappi9 = new javax.swing.JButton();
        nappi10 = new javax.swing.JButton();
        nappi11 = new javax.swing.JButton();
        nappi12 = new javax.swing.JButton();
        nappi14 = new javax.swing.JButton();
        nappi15 = new javax.swing.JButton();
        nappi16 = new javax.swing.JButton();
        nappi17 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtdisp = new javax.swing.JTextField();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("laskin");
        setBackground(new java.awt.Color(181, 175, 22));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.orange);
        setResizable(false);

        txtDisplay.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        txtDisplay.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtDisplay.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtDisplay.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDisplay.setEnabled(false);
        txtDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDisplayActionPerformed(evt);
            }
        });

        nappi1.setBackground(new java.awt.Color(0, 153, 76));
        nappi1.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi1.setText("2");
        nappi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi1ActionPerformed(evt);
            }
        });

        nappi2.setBackground(new java.awt.Color(0, 153, 76));
        nappi2.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi2.setText("4");
        nappi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi2ActionPerformed(evt);
            }
        });

        nappi3.setBackground(new java.awt.Color(0, 153, 76));
        nappi3.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi3.setText("1");
        nappi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi3ActionPerformed(evt);
            }
        });

        nappi4.setBackground(new java.awt.Color(0, 153, 76));
        nappi4.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi4.setText("3");
        nappi4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi4ActionPerformed(evt);
            }
        });

        nappi5.setBackground(new java.awt.Color(0, 153, 76));
        nappi5.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi5.setText("5");
        nappi5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi5ActionPerformed(evt);
            }
        });

        nappi6.setBackground(new java.awt.Color(0, 153, 76));
        nappi6.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi6.setText("6");
        nappi6.setToolTipText("");
        nappi6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi6ActionPerformed(evt);
            }
        });

        nappi7.setBackground(new java.awt.Color(0, 153, 76));
        nappi7.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi7.setText("8");
        nappi7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi7ActionPerformed(evt);
            }
        });

        nappi8.setBackground(new java.awt.Color(0, 153, 76));
        nappi8.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi8.setText("7");
        nappi8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi8ActionPerformed(evt);
            }
        });

        nappi9.setBackground(new java.awt.Color(0, 153, 76));
        nappi9.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi9.setText("9");
        nappi9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi9ActionPerformed(evt);
            }
        });

        nappi10.setBackground(new java.awt.Color(0, 153, 76));
        nappi10.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi10.setText("0");
        nappi10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi10ActionPerformed(evt);
            }
        });

        nappi11.setBackground(new java.awt.Color(255, 255, 51));
        nappi11.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi11.setText("=");
        nappi11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi11ActionPerformed(evt);
            }
        });

        nappi12.setBackground(new java.awt.Color(255, 255, 51));
        nappi12.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi12.setText("+");
        nappi12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi12ActionPerformed(evt);
            }
        });

        nappi14.setBackground(new java.awt.Color(255, 255, 51));
        nappi14.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi14.setText("/");
        nappi14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi14ActionPerformed(evt);
            }
        });

        nappi15.setBackground(new java.awt.Color(255, 255, 51));
        nappi15.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi15.setText("-");
        nappi15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi15ActionPerformed(evt);
            }
        });

        nappi16.setBackground(new java.awt.Color(255, 255, 51));
        nappi16.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi16.setText("x");
        nappi16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi16ActionPerformed(evt);
            }
        });

        nappi17.setBackground(new java.awt.Color(255, 255, 51));
        nappi17.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        nappi17.setText("c");
        nappi17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nappi17ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("BigNoodleTitling", 0, 18)); // NOI18N
        jLabel1.setText("LASKIN k. v1");

        txtdisp.setEditable(false);
        txtdisp.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtdisp.setAutoscrolls(false);
        txtdisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdispActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtdisp))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nappi2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nappi3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(nappi5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(nappi4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(nappi6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(nappi1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nappi15, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nappi14, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nappi12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(nappi10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nappi11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(nappi8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nappi7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nappi9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nappi16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nappi17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nappi3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi15, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nappi2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi14, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nappi8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi16, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nappi10, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi17, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nappi11, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtdisp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Laskin");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nappi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi2ActionPerformed
       if(chk == 1){
          secondnum = 0;
          chk = 0;
          txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
        
       String Enternumber = txtDisplay.getText()+nappi2.getText();
       txtDisplay.setText(Enternumber);
       
       
    }//GEN-LAST:event_nappi2ActionPerformed

    private void nappi5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi5ActionPerformed
        if(chk == 1){
        secondnum = 0;
        chk = 0;
        txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...
        }
   
        
       String Enternumber = txtDisplay.getText()+nappi5.getText();
       txtDisplay.setText(Enternumber);
       
       
    }//GEN-LAST:event_nappi5ActionPerformed

    private void nappi6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi6ActionPerformed
       if(chk == 1){
        secondnum = 0;
        chk = 0;
        txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...
        }
        
       String Enternumber = txtDisplay.getText()+nappi6.getText();
       txtDisplay.setText(Enternumber);
       
       
    }//GEN-LAST:event_nappi6ActionPerformed

    private void nappi7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi7ActionPerformed
         if(chk == 1){
           secondnum = 0;
           chk = 0;
           txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...
           }
        
       String Enternumber = txtDisplay.getText()+nappi7.getText();
       txtDisplay.setText(Enternumber);
       
    }//GEN-LAST:event_nappi7ActionPerformed

    private void nappi8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi8ActionPerformed
         if(chk == 1){
         secondnum = 0;
         chk = 0;
         txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
    
        String Enternumber = txtDisplay.getText()+nappi8.getText();
       txtDisplay.setText(Enternumber);
       
    }//GEN-LAST:event_nappi8ActionPerformed

    private void nappi9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi9ActionPerformed
        if(chk == 1){
           secondnum = 0;
           chk = 0;
           txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
      
        String Enternumber = txtDisplay.getText()+nappi9.getText();
        txtDisplay.setText(Enternumber);
        
    }//GEN-LAST:event_nappi9ActionPerformed

    private void nappi10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi10ActionPerformed
        if(chk == 1){
        secondnum = 0;
        chk = 0;
        txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
    
        String Enternumber = txtDisplay.getText()+nappi10.getText();
       txtDisplay.setText(Enternumber);
       
    }//GEN-LAST:event_nappi10ActionPerformed

    private void nappi11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi11ActionPerformed
    secondnum=Integer.parseInt(txtDisplay.getText());
    if(operations.equals("+"))
    result = firstnum+secondnum;
    if(operations.equals("-"))
    result = firstnum-secondnum;
    if(operations.equals("*"))
    result = firstnum*secondnum;
    if(operations.equals("/"))
    result = firstnum/secondnum;
    
    txtDisplay.setText(result+ " ");
    chk = 1;
    
   txtdisp.setText("paina c-tä");
    }//GEN-LAST:event_nappi11ActionPerformed

    private void nappi12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi12ActionPerformed
    firstnum= Integer.parseInt(txtDisplay.getText());
    txtDisplay.setText("");
    operations="+";
    }//GEN-LAST:event_nappi12ActionPerformed

    private void nappi14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi14ActionPerformed
    firstnum= Integer.parseInt(txtDisplay.getText());
    txtDisplay.setText("");
    operations="/";
    }//GEN-LAST:event_nappi14ActionPerformed

    private void nappi15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi15ActionPerformed
    firstnum= Integer.parseInt(txtDisplay.getText());
    txtDisplay.setText("");
    operations="-";
    }//GEN-LAST:event_nappi15ActionPerformed

    private void nappi16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi16ActionPerformed
    firstnum= Integer.parseInt(txtDisplay.getText());
    txtDisplay.setText("");
    operations="*";
    }//GEN-LAST:event_nappi16ActionPerformed

    private void nappi17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi17ActionPerformed
    secondnum = 0;
    txtDisplay.setText("");
    txtdisp.setText("anna luku");
    }//GEN-LAST:event_nappi17ActionPerformed

    private void nappi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi3ActionPerformed
    if(chk == 1){
        secondnum = 0;
        chk = 0;
        txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
        
        String Enternumber = txtDisplay.getText()+nappi3.getText();
       txtDisplay.setText(Enternumber);
       
    }//GEN-LAST:event_nappi3ActionPerformed

    private void nappi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi1ActionPerformed
        if(chk == 1){
            secondnum = 0;
            chk = 0;
            txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }     
        String Enternumber = txtDisplay.getText()+nappi1.getText();
       txtDisplay.setText(Enternumber);
       
       
    }//GEN-LAST:event_nappi1ActionPerformed

    private void nappi4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nappi4ActionPerformed
       if(chk == 1){
       secondnum = 0;
       chk = 0;
       txtDisplay.setText(""); // to clear if user did not clear.. lazy but works...

    }
        String Enternumber = txtDisplay.getText()+nappi4.getText();
       txtDisplay.setText(Enternumber);
       
    
    }//GEN-LAST:event_nappi4ActionPerformed

    private void txtDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDisplayActionPerformed

    private void txtdispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdispActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdispActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lasku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lasku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lasku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lasku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lasku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JButton nappi1;
    private javax.swing.JButton nappi10;
    private javax.swing.JButton nappi11;
    private javax.swing.JButton nappi12;
    private javax.swing.JButton nappi14;
    private javax.swing.JButton nappi15;
    private javax.swing.JButton nappi16;
    private javax.swing.JButton nappi17;
    private javax.swing.JButton nappi2;
    private javax.swing.JButton nappi3;
    private javax.swing.JButton nappi4;
    private javax.swing.JButton nappi5;
    private javax.swing.JButton nappi6;
    private javax.swing.JButton nappi7;
    private javax.swing.JButton nappi8;
    private javax.swing.JButton nappi9;
    private javax.swing.JTextField txtDisplay;
    private javax.swing.JTextField txtdisp;
    // End of variables declaration//GEN-END:variables
}
